Manual Steps (human.txt)

1. HSM/KMS Integration:
   - Provision a Hardware Security Module (HSM) or Cloud KMS to store all private keys.
   - Update each service’s `KEY_DIR` or keystore abstraction to use PKCS#11/KMS SDK instead of filesystem.

2. Real TLS Certificates:
   - Acquire valid TLS certificates (e.g. via public CA or internal PKI) for `ca-service`, `acme-server`, and `signing-service`.
   - Replace self‑signed certificates in keystores with production certs, and update `CA_CERT_FILE`, `TLS_CERT_FILE`, `TLS_KEY_FILE` env variables.

3. DNS & Networking:
   - Assign DNS names (e.g. `ca.example.com`, `acme.example.com`, `signing.example.com`).
   - Configure firewall rules, load balancers, and ingress controllers accordingly.

4. Identity & Access Management:
   - Integrate with OIDC/OAuth2 provider for human/operator access, replacing X-API-Key where needed.
   - Configure RBAC policies (e.g. vault, OPA) to limit signing scopes.

5. SLSA Provenance Generation:
   - Instrument CI pipelines (e.g. GitHub Actions) to record SLSA provenance following in-toto/Slingshot specs.
   - Store provenance JSON in Signing service via SBOM/provenance endpoints in production.

6. Service Mesh & Zero‑Trust:
   - Deploy under a Service Mesh (e.g. Istio) by labeling the namespace `istio-injection=enabled` and applying sample manifests.
   - Sample Istio Gateway & VirtualService:
     ```yaml
     apiVersion: v1
     kind: Namespace
     metadata:
       name: pqcpki
       labels:
         istio-injection: enabled
     ---
     apiVersion: networking.istio.io/v1beta1
     kind: Gateway
     metadata:
       name: pqcpki-gateway
       namespace: pqcpki
     spec:
       selector:
         istio: ingressgateway
       servers:
       - port:
           number: 443
           name: https
           protocol: HTTPS
         tls:
           mode: MUTUAL
           serverCertificate: "/etc/istio/ingressgateway-certs/tls.crt"
           privateKey: "/etc/istio/ingressgateway-certs/tls.key"
           caCertificates: "/etc/istio/ingressgateway-ca-certs/ca-cert.pem"
         hosts:
         - "acme.example.com"
         - "signing.example.com"
     ---
     apiVersion: networking.istio.io/v1beta1
     kind: VirtualService
     metadata:
       name: pqcpki-vs
       namespace: pqcpki
     spec:
       hosts:
       - "acme.example.com"
       - "signing.example.com"
       gateways:
       - pqcpki-gateway
       http:
       - match:
         - uri:
             prefix: "/acme"
         route:
         - destination:
             host: acme-server.pqcpki.svc.cluster.local
             port:
               number: 4000
       - match:
         - uri:
             prefix: "/v1"
         route:
         - destination:
             host: signing-service.pqcpki.svc.cluster.local
             port:
               number: 7000
     ```
   - Apply these manifests after deploying services; verify mTLS via service mesh telemetry.

7. Compliance Artifacts:
   - Collect SBOMs (e.g. syft) and audit logs into a compliance repository (SLSA, EU CRA).
   - Generate compliance reports, periodic audits, and retention policies.